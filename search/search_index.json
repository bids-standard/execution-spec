{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"BIDS Apps execution specification","text":""},{"location":"index.html#the-problem","title":"The Problem","text":"<p>Neuroimaging is a field with an enormous library of powerful tools and openly available datasets that can be difficult to get to work together.</p>"},{"location":"index.html#what-is-bids","title":"What is BIDS?","text":"<p>The Brain Imaging Data Structure (BIDS) is a community-driven standardized data organization protocol that gives analysis tools a common specification for data input, see this link. BIDS solves the dataset complexity problem by providing a consistent representation for data sharing and adoption.</p>"},{"location":"index.html#so-why-do-we-need-the-bids-application-specification","title":"So why do we need the BIDS Application Specification?","text":"<p>While BIDS is great for standardizing datasets, analytical tools can take a variety of forms, arguments, and complexities, limiting their ability to be applied interchangeably. The BIDS Application Specification solves this problem by creating a community-driven standardized structure for software definitions and their execution.</p>"},{"location":"index.html#what-is-this-document","title":"What is this document?","text":"<p>This document is a draft for the BIDS Application specification for the purposes of tool description, provenance and reproducibility. This is a working document in draft stage and any comments are welcome. This document inherits all components of the original specification (for example how to store imaging data, events, stimuli and behavioral data), and should be seen as an extension of it, not a replacement.</p>"},{"location":"index.html#how-can-i-help","title":"How can I help?","text":"<p>There are many open comments on the document, and all of them would benefit from your input. As you read this document, please feel free to ask questions, complete remaining tasks, or reach out to any of the listed contributors and moderators.</p>"},{"location":"CHANGELOG.html","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"CHANGELOG.html#010dev","title":"[0.1.0.dev]","text":""},{"location":"CHANGELOG.html#added","title":"Added","text":"<ul> <li>Adopted Boutiques validatable and runnable descriptive standard</li> <li>Increased flexibility for runtime arguments and command-line formatting</li> <li>Defined exit codes to indicate various application outcomes</li> <li>Link between application descriptions and data specification versions</li> <li>Extensible definition which will scale with the BIDS standards as new entities are added</li> </ul>"},{"location":"CHANGELOG.html#changed","title":"Changed","text":""},{"location":"CHANGELOG.html#deprecated","title":"Deprecated","text":"<ul> <li>Position arguments are no longer supported.</li> </ul>"},{"location":"CHANGELOG.html#removed","title":"Removed","text":""},{"location":"CHANGELOG.html#fixed","title":"Fixed","text":""},{"location":"CHANGELOG.html#security","title":"Security","text":""},{"location":"CONTRIBUTING.html","title":"Contributing","text":""},{"location":"CONTRIBUTING.html#lead-contributors","title":"Lead Contributors","text":"<ul> <li>Christopher J Markiewicz markiewicz@stanford.edu</li> <li>Gregory Kiar gregory.kiar@childmind.org</li> </ul>"},{"location":"CONTRIBUTING.html#contributors","title":"Contributors","text":"<ul> <li>Tristan Glatard: tristan.glatard@concordia.ca</li> <li>Pierre Rioux:  pierre.rioux@mcgill.ca</li> <li>Yaroslav O. Halchenko yoh@dartmouth.edu</li> <li>Eric Earl eric.earl@nih.gov</li> <li>Pradeep Reddy Raamana raamanap@pitt.edu</li> <li>Aki Nikolaidis aki.nikolaidis@childmind.org</li> <li>Guiomar Niso guiomar.niso@ctb.upm.es,</li> <li>Lennart Walger lennart.walger@ukbonn.de</li> <li>Sebastien Tourbier sebastien.tourbier1@gmail.com</li> <li>Alejandro de la Vega delavega@utexas.edu</li> <li>Robert Luke robert.luke@mq.edu.au</li> </ul>"},{"location":"examples.html","title":"Example BIDS App","text":"<p>This section describes a BIDS Application named bids-app that can only operate at the participant analysis leveland accepts a numeric seed for a random number generator.</p>"},{"location":"examples.html#interface-descriptor","title":"Interface descriptor","text":"<pre><code>{\n  \"name\": \"Example BIDS App\",\n  \"tool-version\": \"0.0.1\",\n  \"schema-version\": \"0.5\",\n  \"custom\": {\n    \"BIDSApplicationVersion\": \"2.0\"\n  },\n  \"command-line\": \"bids-app [InputDataset] [OutputLocation] [AnalysisLevel] [ParticipantLabel] [RandomSeed]\",\n  \"inputs\": [\n    {\n      \"id\": \"InputDataset\",\n      \"name\": \"Input datasets\",\n      \"value-key\": \"[InputDataset]\",\n      \"type\": \"File\",\n      \"list\": true,\n      \"optional\": false,\n      \"command-line-flag\": \"--input-dataset\"\n    },\n    {\n      \"id\": \"OutputLocation\",\n      \"name\": \"Output location\",\n      \"value-key\": \"[OutputLocation]\",\n      \"type\": \"File\",\n      \"optional\": false,\n      \"command-line-flag\": \"--output-location\"\n    },\n    {\n      \"id\": \"AnalysisLevel\",\n      \"name\": \"Analysis level\",\n      \"value-key\": \"[AnalysisLevel]\",\n      \"type\": \"String\",\n      \"optional\": true,\n      \"value-choices\": [\"participant\"],\n      \"default-value\": \"participant\",\n      \"command-line-flag\": \"--analysis-level\"\n    },\n    {\n      \"id\": \"SubjectLabel\",\n      \"name\": \"Participant labels\",\n      \"value-key\": \"[ParticipantLabel]\",\n      \"type\": \"String\",\n      \"list\": true,\n      \"optional\": true,\n      \"command-line-flag\": \"--participant-label\"\n    },\n    {\n      \"id\": \"OurRandomSeed\",\n      \"name\": \"Seed for pseudorandom number generator\",\n      \"description\": \"Example parameter that may be relevant.\",\n      \"value-key\": \"[OurRandomSeed]\",\n      \"type\": \"Number\",\n      \"optional\": true,\n      \"command-line-flag\": \"--random-seed\"\n    }\n  ]\n}\n</code></pre>"},{"location":"examples.html#invocation-definition","title":"Invocation definition","text":"<p>Two example input definitions follow:</p> <p><code>input_params1.json</code></p> <pre><code>{\n  \"InputDataset\": [\"/path/to/bids\", \"/path/to/derivatives\"],\n  \"OutputLocation\": \"/path/to/output\",\n  \"AnalysisLevel\": \"participant\",\n  \"SubjectLabel\": [\"01\", \"02\"],\n  \"RandomSeed\": 2983578366\n}\n</code></pre> <p><code>input_params2.json</code></p> <pre><code>{\n  \"InputDataset\": [\"/path/to/bids\", \"/path/to/derivatives\"],\n  \"OutputLocation\": \"/path/to/output\",\n  \"AnalysisLevel\": \"participant\"\n}\n</code></pre>"},{"location":"examples.html#bids-app-compatible-example","title":"BIDS App compatible example","text":"<p>Before the BIDS Application specification existed there were BIDS Apps. Attention has been paid to ensure that BIDS Exec apps can be compatible with existing BIDS Apps.</p> <p>For example, the term participant was widely used in BIDS Apps, whereas subject is the preferred term in BIDS. To allow backwards compatibility here you can use:</p> <pre><code>{\n  \"id\": \"SubjectLabel\",\n  \"name\": \"Participant labels\",\n  \"value-key\": \"[ParticipantLabel]\",\n  \"type\": \"String\",\n  \"list\": true,\n  \"optional\": true,\n  \"command-line-flag\": \"--participant-label\"\n}\n</code></pre>"},{"location":"inputs.html","title":"Input specification","text":"<p>Inputs to BIDS apps may be specified as JSON objects that map input ids to values. The objects found within the required inputs list have the following fields, described fully in https://github.com/boutiques/boutiques/blob/0.5.25/schema/README.md#inputs (source):</p>"},{"location":"inputs.html#list-of-relevant-inputs-object-properties-for-the-bids-application-specification","title":"List of relevant inputs object properties for the BIDS Application specification","text":"Field name Requirement Level Data type Description id REQUIRED String The argument ID.  Alphanumeric values and underscores only.  CamelCase is recommended. name REQUIRED String Plain text name of input for display.  Can contain spaces. type REQUIRED String One of {\"String\", \"File\", \"Flag\", \"Number\"}. command-line-flag OPTIONAL String For non-positional arguments, the flag which is associated with the argument on the command-line. list OPTIONAL Boolean Indicates whether or not the input field is a list of inputs.  One of {true, false}.  If omitted, it will be interpreted as false (for example non-list input). optional OPTIONAL Boolean Indicates whether or not the input field is required.  One of {true, false}.  If omitted, will be interpreted as false (for example non-optional input). value-choices OPTIONAL List List of possible values that the parameter may take. value-key OPTIONAL String String to replace in command-line template string.  If specified, this MUST NOT be either a superset or subset of the value-key attribute associated with another object in the descriptor; to ensure this, brackets are typically used (for example \"[value]\")."},{"location":"inputs.html#list-of-group-object-properties-and-their-role-within-the-bids-application-specification","title":"List of group object properties and their role within the BIDS Application specification","text":"<p>In addition to describing inputs themselves, groups of inputs and their relationships can be defined as follows:</p> Field name Requirement Level Data type Description id REQUIRED String A short, unique, informative identifier containing only alphanumeric characters and underscores. members REQUIRED List IDs of the input parameters belonging to this group. name REQUIRED String A human-readable name for the input group. description RECOMMENDED String Description of the input group. all-or-none OPTIONAL Boolean True if all parameters included in this group need to be included together. . mutually-exclusive OPTIONAL Boolean True if only one input in the group may be selected at runtime. one-is-required OPTIONAL Boolean True if at least one of the inputs in the group must be selected."},{"location":"inputs.html#required-arguments","title":"Required arguments","text":"<p>BIDS Applications MUST provide the following arguments. Notes that \"Argument ID\" is what is required to exist as the state \"id\" in the Boutiques descriptor, and will be validated, while the example CLI Flag provides a possible way this could be expressed in the tool's interface.</p>"},{"location":"inputs.html#list-of-custom-object-properties-and-roles-within-the-bids-application-specification","title":"List of custom object properties and roles within the BIDS Application specification","text":"Argument ID CLI Flag Requirement Level Data type Description AnalysisLevel <code>--analysis-level</code> REQUIRED String String with value-choices which are a subset of {run, session, subject, dataset, meta}.  The app may support one or more of these analysis levels.  A default may be set, and unsupported analysis levels should return an exit code of 17, consistent with the definition in Table 7. Help <code>--help</code> REQUIRED Flag Flag that specifies whether or not to show the help-text that describes how the tool may be correctly used. InputDataset <code>--input-dataset</code> REQUIRED List List of URIs/paths of the BIDS datasets to be processed.  Whether or not the order of listed datasets is important MUST be specified in the parameter description.  The tool MUST NOT reorder the user-specified list. OutputLocation <code>--output-location</code> REQUIRED List One URI/path to the location where all outputs will be stored. ToolVersion <code>--version</code> REQUIRED Flag Returns the version of the tool being used."},{"location":"inputs.html#backwards-compatibility","title":"Backwards compatibility","text":"<p>If an app wishes to maintain backwards compatibility with BIDS-Apps 1.0, then the following command-line should be valid:</p> <pre><code>    bids-app InputDataset OutputLocation AnalysisLevel [options]\n</code></pre> <p>In this case, InputDataset is limited to a list of length one. It is worth noting that all legacy apps can be supported in this spec, they just need to write a descriptor which maps the inputs as they are expected and defined, here, to their associated values in the original application.</p>"},{"location":"inputs.html#reserved-arguments","title":"Reserved arguments","text":"<p>The ability to filter BIDS entities (for example subject, session, or run) allows for the selection of subsets of datasets. To be extensible as new entities are added to the BIDS specification, the reserved arguments are defined here as a rule which maps to BIDS entities, rather than specifying the moving goalpost of an exhaustive list. The arguments may be specified as follows:</p> <ul> <li> <p>The argument ID SHOULD be in CamelCase, with the form &lt;entity&gt;Label or     &lt;entity&gt;Index, depending on whether the associated values are constrained     to be alphanumeric or numeric, respectively.</p> </li> <li> <p>The argument MUST accept values referring to labels/indices, as consistent     with the above, in either the form of a list or a file containing a     line-delimited list. The items provided SHOULD NOT include the entity label in     addition to the labels/indices.</p> </li> </ul> <p>While several examples exist within Table 5, to the following demonstrates how the above rules can be applied for the BIDS entity \"subject\":</p> <p>ID: <code>SubjectLabel</code></p> <p>CLI flag: <code>--subject-label</code></p> <p>Acceptable and equivalent usages:</p> <pre><code>    --subject-label 01 02 03\n    --subject-label subject_ids.txt\n</code></pre> <p>Contents of <code>subject_ids.txt</code>:</p> <pre><code>01\n02\n03\n</code></pre> <p>In all cases where such arguments are defined and applied, only files in the BIDS dataset that have a value for the specified entities will be subject to filtering. That is, if a file does not have a given entity (for example entity value for it is &lt;None&gt;), the file will be included.</p> <p>Applications are not required to support these arguments, but MUST NOT assign these arguments to other meanings. To reduce conflicts, BIDS Applications SHOULD avoid using this convention except for entities that are anticipated to be standardized.</p> <p>Example of an Interface descriptor: see 4.1.</p> <p>For example, suppose we have an application with the following descriptor:</p> <p><code>example_app.json</code>:</p> <pre><code>{\n    \"name\": \"Example BIDS App\",\n    \"command-line\": \"bids-app [InputDataset] [OutputLocation] [AnalysisLevel] [ParticipantLabel] [OurRandomSeed]\"\"inputs\": [\n        {\n            \"id\": \"InputDataset\",\n            \"name\": \"Input datasets\",\n            \"value-key\": \"[InputDataset]\",\n            \"type\": \"File\",\n            \"list\": true,\n            \"optional\": false,\n            \"command-line-flag\": \"--input-datasets\"\n        },\n        {\n            \"id\": \"OutputLocation\",\n            \"name\": \"Output location\",\n            \"value-key\": \"[OutputLocation]\",\n            \"type\": \"File\",\n            \"optional\": false,\n            \"command-line-flag\": \"--output-location\"\n        },\n        {\n            \"id\": \"AnalysisLevel\",\n            \"name\": \"Analysis level\",\n            \"value-key\": \"[AnalysisLevel]\",\n            \"type\": \"String\",\n            \"optional\": false,\n            \"value-choices\": [\n                \"run\",\n                \"session\",\n                \"subject\",\n                \"dataset\"\n            ],\n            \"default\": \"session\",\n            \"command-line-flag\": \"--analysis-level\"\n        },\n        {\n            \"id\": \"SubjectLabel\",\n            \"name\": \"Subject labels\",\n            \"value-key\": \"[SubjectLabel]\",\n            \"type\": \"String\",\n            \"list\": true,\n            \"optional\": true,\n            \"command-line-flag\": \"--subject-label\"\n        },\n        {\n            \"id\": \"RandomSeed\",\n            \"name\": \"Seed for pseudorandom number generator\",\n            \"value-key\": \"[RandomSeed]\",\n            \"type\": \"Number\",\n            \"optional\": true,\n            \"command-line-flag\": \"--random-seed\"\n        }\n    ]\n}\n</code></pre> <p><code>input_params.json</code></p> <pre><code>{\n  \"InputDataset\": [\"/path/to/bids\", \"/path/to/derivatives\"],\n  \"OutputLocation\": \"/path/to/output\",\n  \"AnalysisLevel\": \"subject\",\n  \"SubjectLabel\": [\"01\", \"02\"],\n  \"RandomSeed\": \"0xB1D5CAF3\"\n}\n</code></pre>"},{"location":"outputs.html","title":"Outputs","text":""},{"location":"outputs.html#file-formats-for-the-application-specification-and-report","title":"File formats for the application specification and report","text":"<p>BIDS Apps MUST be able to be called via the BIDS Application Boutiques descriptor and corresponding input parameter dictionary files, commonly referred to in the Boutiques parlance as \"invocations\", and accept any BIDS dataset. It is RECOMMENDED that BIDS Applications produce BIDS-Derivatives-compliant datasets.</p>"},{"location":"outputs.html#list-of-relevant-output-files-object-properties-for-the-bids-application-specification","title":"List of relevant output-files object properties for the BIDS Application specification","text":"Field name Requirement Level Data type Description id REQUIRED String A short, unique, informative identifier containing only alphanumeric characters and underscores.  Typically used to generate variable names.  (should conform ^[0-9,_,a-z,A-Z]*$).  Example: \"data_file\" name REQUIRED String A human-readable output name.  Example: 'Supplementary input file for X task'. description RECOMMENDED String A plain-text description of the output-files of the BIDS Application. command-line-flag OPTIONAL String Flag associated with the argument on the command-line.  Examples: -o, --output file-template OPTIONAL Array of strings An array of strings that may contain value keys and together populate the self-contained structure of a configuration file. list OPTIONAL Boolean True if output is a list of values. optional OPTIONAL Boolean True if output may not be produced by the tool. path-template OPTIONAL String Describes the output file path relative to the execution directory.  May contain input value keys and wildcards.  Example: \"xx\". path-template-stripped-extensions OPTIONAL List List of file extensions that will be stripped from the input values before being substituted in the path template.  Example: [\". nii\",\". nii. gz\"]. value-key OPTIONAL String A string contained in command-line, substituted by the output value and/or flag at runtime."},{"location":"outputs.html#execution-report-updating-dataset-description","title":"Execution Report &amp; Updating Dataset Description","text":"<p>When generated, an execution report that completely describes the processing that was executed and the dataset MUST comply with the BIDS Provenance Extension Proposal (BEP28). These outputs are OPTIONAL, and if provided, should be specified in the <code>output-files</code> of the tool descriptor.</p> <p>Similarly, the dataset_description.json file SHOULD be updated to reflect the processing that has occurred by the BIDS Application.</p>"},{"location":"outputs.html#behaviors","title":"Behaviors","text":"<p>For a given set of arguments, the behavior of a BIDS Application will typically vary based on the contents of the input dataset. The dataset may be BIDS-compliant, or it may not; and it may contain the file types the BIDS App requires, or it may not. This section describes the expected behavior under each combination of cases, and describes RECOMMENDED exit codes on systems that support them.</p>"},{"location":"outputs.html#valid-bids-datasets","title":"Valid BIDS datasets","text":"<p>If the dataset is BIDS-compliant and contains the files required by the application, then the application should make a best effort to perform its task to completion.</p> <p>If the dataset is BIDS-compliant but does not contain the files required by the application, then the application MAY fail immediately or when attempting to open a missing file. In this case, it is RECOMMENDED to use exit code <code>66</code> (NOINPUT).</p>"},{"location":"outputs.html#invalid-bids-datasets","title":"Invalid BIDS datasets","text":"<p>If the dataset is not BIDS-compliant, then the BIDS App MAY fail immediately with exit code <code>16</code>.</p> <p>If the dataset contains the required files but is not BIDS-compliant (for example a \"dirty\" dataset that has more files than needed), then the BIDS App MAY treat the dataset as valid.</p>"},{"location":"outputs.html#exit-codes","title":"Exit codes","text":"<p>An exit code or exit status is an integer indicating the reason for termination for use by the parent program or operating system. The interpretation of exit codes varies across systems, and programmers SHOULD follow the conventions of the systems for which they are programming.</p> <p>Most operating systems, including POSIX (Linux, Mac OSX) and Windows use 0 to indicate success and &gt;0 to indicate failure. POSIX systems are limited to an unsigned byte (range: 0-255), so these recommendations are limited to that range. Exit codes 64-78 are specified in BSD sysexits(3), and should be avoided unless applicable. Exit codes 2 and 126-165 may be set by Bash, and so will be reserved.</p> <p>The following exit codes are RECOMMENDED for consistent error handling under POSIX and Windows environments:</p>"},{"location":"outputs.html#reserved-exit-codes-and-their-definitions","title":"Reserved exit codes and their definitions","text":"Exit code Definition 0 SUCCESS. The program completed successfully. 1 FAILURE. The program failed for unspecified reasons. 2 Reserved 16-31 BIDS-related codes. Reserved except the following 16 An input dataset failed BIDS validation. 17 Unknown analysis level. 18 Entity-based filtering options selected no files. 19 Both command-line arguments and a parameter invocation file were passed to the application. 64-78 BSD codes - Reserved except the following. 64 USAGE. The command was used incorrectly. 65 DATAERR. The input data was incorrect in some way. 66 NOINPUT. The input data was missing or unreadable. 73 CANTCREAT. An output file/directory cannot be created. 74 IOERR. Failure during file reading/writing. 75 TEMPFAIL. Temporary failure. Another run is expected to succeed. 126-165 BASH codes - Reserved"},{"location":"scope.html","title":"Scope","text":"<p>While the BIDS format is great for standardizing datasets, analytical tools operating on that structure can take a variety of forms, arguments, and complexities, limiting their ability to be applied interchangeably. The BIDS Application Specification solves this problem by creating a community-driven standardized structure for software definitions and their execution.</p> <p>This specification extends the Brain Imaging Data Structure (BIDS) Specification to describe how software pipelines and analytic tools should interact with BIDS-formatted datasets. These tools will be referred to as \"BIDS Apps\" or \"BIDS Applications\", and can accept any valid BIDS dataset prior to producing some result (including a message of inaction, as may be applicable in some cases).</p>"},{"location":"scope.html#goals","title":"Goals","text":"<p>This extension is motivated by a desire to automatically and reproducibly process neuroscientific data. It seeks to specify file types and metadata for describing the execution of command-line programs that operate upon BIDS datasets. Graphical and web-based interfaces are outside the scope of this extension, though it is expected that this specification will simplify the integration of BIDS datasets and applications into such platforms.</p> <p>This is guided by the following requirements and desiderata:</p> <ul> <li>A tool's parameters should be easily translatable to the BIDS application input specification.</li> <li>A specification should be maximally descriptive rather than prescriptive.</li> <li>A structured execution specification should be produced as a result of using an application.</li> <li>The specification should be sufficiently descriptive to perfectly reproduce analyses.</li> <li>A structured set of input parameters should be usable in place of command-line arguments.</li> <li>It should be possible to make multiple BIDS datasets available to an application.</li> </ul>"},{"location":"scope.html#relation-to-bids","title":"Relation to BIDS","text":"<p>The core principles of the original BIDS-Raw specification are inherited by the BIDS Application specification. This specification is a successor to BIDS-Apps, which were described in Gorgolewski, et al. 2017 (doi:10.1371/journal.pcbi.1005209), here referred to as BIDS-Apps 1.0. Backwards compatibility with BIDS-Apps 1.0 is not an explicit goal, but can be achieved in many cases as is discussed in the section on backwards-compatibility. A summary of changes from BIDS-Apps 1.0 is included in the CHANGELOG.</p> <p>This specification is seen as complementary to BIDS-Derivatives, which is part of BIDS as of version 1.4.0, and the most recent stable version may be found at https://bids-specification.readthedocs.io/en/stable/05-derivatives/01-introduction.html. It is not required that every BIDS Application produce a BIDS-Derivatives-compliant result dataset, but any outputs that may be required by the BIDS Application specification must be compliant with the BIDS-Derivatives specification.</p> <p>Please refer to general BIDS specification document for context and general guidelines (definitions, units, directory structure, missing values, stimulus and event information and so on): https://bids-specification.readthedocs.io/en/stable/</p> <p>The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119.</p> <p>The terminology that will be used is inherited from BIDS-Raw and includes the following:</p> <ul> <li> <p>Dataset \u2014 a set of neuroimaging and behavioral data acquired for a purpose     of a particular study. A dataset consists of data acquired from one or more     subjects and/or sessions.</p> </li> <li> <p>Subject \u2014 a person or animal participating in the study.     Interchangeable with \"Participant\".</p> </li> <li> <p>Session \u2014 a consistent logical grouping of neuroimaging and other data across subjects.</p> </li> <li> <p>Run \u2014 an uninterrupted repetition of data acquisition that has the same     acquisition parameters and task (however events can change from run to run due     to different subject response or randomized nature of the stimuli).</p> </li> <li> <p> - a nonnegative integer, possibly prefixed with arbitrary     number of 0s for consistent indentation, for example, it is 01 in run-01     following run- specification. <li> <p> - an alphanumeric value, possibly prefixed with arbitrary     number of 0s for consistent indentation, for example, it is rest in task-rest     following task- specification."},{"location":"specification.html","title":"BIDS execution specification","text":"<p>There are three domains of requirements that BIDS Applications must specify:</p> <ol> <li>User interface components</li> <li>Required application behaviors</li> <li>Required application outputs</li> </ol> <p>BIDS contains \"required\", \"recommended\" and \"optional\" fields. These are indicated throughout the document:</p> <ul> <li>REQUIRED: essential to be BIDS compliant (meaning MUST as per RFC2199)</li> <li>RECOMMENDED: gives a warning if not present (meaning SHOULD as per RFC2199)</li> <li>OPTIONAL: no warning if missing (meaning MAY as per RFC2199)</li> </ul> <p>Ultimately, through using Boutiques to define tools and their parameters, the goal is that each tool can be interacted with as follows:</p> <pre><code>$ # Using Boutiques directly, the \"exec launch\" commands will run the app\n$ bosh exec launch bids-app --invocation input_params.json\n$ # Eventually, we envision that BIDS Application interface will also support\n$ # simple, lightweight overrides to provide some of these common values via\n$ # the command line directly.\n$ bids-launch bids-app --input-dataset /path/to/bids /path/to/derivatives \\\n    --output-location /path/to/output \\\n    --analysis-level subject--subject-label 01 02 \\\n    --random-seed 0xBID5CAFE\n</code></pre> <p>In the next sections, the <code>bids-app</code> tool, a Boutiques descriptor, and the <code>input_params.json</code>, a set of invocation parameters corresponding to this app, will be defined.</p>"},{"location":"ui.html","title":"User interface","text":"<p>A uniform user interface is essential to scalable deployment of BIDS Applications. This section describes the common interface components that may be relied upon by users or platforms running these applications (callers). Command-line interfaces map between positional or flag arguments provided through an interactive shell program (for example Bash) to a program and program behavior. However, tools written in different languages or following different conventions may represent and parse these arguments distinctly. For the purposes of automated execution of diverse tools, a more useful interface is a mapping of parameter identifiers to their values, abstracting the way they are represented on the command-line (CLI). Boutiques is a standard developed for this mapping. Boutiques provides a JSON schema and related tools to describe, validate, execute and share command-line tools, among other utilities. The Boutiques toolkit, named bosh, will be referred to when discussing examples throughout this specification.</p> <p>Instead of requiring specific positional arguments and flags which assign common names to expected options (for example \"subject-label\") in the command-line interfaces themselves, BIDS Applications should provide a Boutiques descriptor \u2014 a standardized JSON file that describes the command line behavior and operation of a tool \u2014 that map the tool-specific common arguments to these common names, without requiring rewriting of the command-line tools. In the sections below, the identifiers assigned in the Boutiques descriptor are described in the \"Argument ID\" column of relevant tables.</p> <p>The Boutiques descriptor for a program SHOULD be retrievable by calling the application with the <code>--bids-exec-spec</code> flag and no other arguments.</p>"},{"location":"ui.html#interface-descriptor","title":"Interface descriptor","text":"<p>A human-readable schema for a Boutiques descriptor may be found at https://github.com/boutiques/boutiques/blob/0.5.25/schema/README.md. This section attempts to summarize the salient points of that document, but the Boutiques schema is authoritative and complete. In addition to the Boutiques fields (see Tables 1\u20134, 6), BIDS conformant descriptors MUST include a custom object (see Table 2) containing the BIDSApplicationVersion key and associated value which indicates the version of the BIDS application specification to which they conform, together with some additional optional fields. Descriptors SHOULD be simply named as name.json.</p>"},{"location":"ui.html#list-of-relevant-base-boutiques-properties-and-their-role-within-bids-applications","title":"List of relevant base Boutiques properties and their role within BIDS Applications","text":"Field name Requirement Level Data type Description command-line REQUIRED String A template string including the command and references to the value-keys of all possible inputs.  The ordering imposed here may be significant, in particular for non-optional arguments. custom REQUIRED Object Object which can contain extensible metadata.  This has a single required element, as described in Table 2. inputs REQUIRED List List of objects which contain input parameter definitions.  Described in Table 3. name REQUIRED String The name of the BIDS Application. output-files REQUIRED List List of objects which contain output parameter definitions.  Described in Table 6. schema-version REQUIRED String Boutiques schema version.  Must be \"\u22650. 5\".  This is not to be confused with the BIDS Application schema and associated version. tool-version REQUIRED String Version of the BIDS Application. description RECOMMENDED String A plain-text description of the BIDS Application. descriptor-url RECOMMENDED String Link to the descriptor itself.  Likely a GitHub repo alongside the described tool, for example. doi RECOMMENDED String DOI of the descriptor returned once published via Boutiques.  (Note: This is not the DOI of the tool itself. ) suggested-resources RECOMMENDED Object Contains an execution walltime-estimate in seconds, memory usage in MB, and CPU/GPU usage in number of core threads/devices. container-image OPTIONAL Object The name and location of a container image, such as those in Docker or Singularity formats, containing the configured application. error-codes OPTIONAL List List of objects that contain error code information.  The reserved error conditions are described in Table 7. groups OPTIONAL List List of objects that contain relational information among input parameters as described in Table 4.  This is not to be confused with any other BIDS-relevant definition of groups."},{"location":"ui.html#list-of-custom-object-properties-and-roles-within-the-bids-application-specification","title":"List of custom object properties and roles within the BIDS Application specification","text":"<p>The <code>custom</code> object has the following defined fields for use in the context of BIDS Applications.</p> Field name Requirement Level Data type Description BIDSAppSpecVersion REQUIRED String The version of the BIDS application specification with which the application complies. OutputDataSpecification OPTIONAL List If output data conforms to a standard definition (for example NIDM-1. 1. 0), these data standards may be included as a list of strings. <code>&lt;unspecified&gt;</code> OPTIONAL Any Any key referring to arbitrary metadata that may be relevant or of interest to the application and its users."}]}